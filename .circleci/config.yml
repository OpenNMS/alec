version: 2.1

executors:
  build-executor:
    docker:
      - image: opennms/build-env:1.0-b4
        environment:
          MAVEN_OPTS: -Xmx2g

  docs-executor:
    docker:
      - image: antora/antora:2.0.0

  netlify-cli-executor:
    docker:
      - image: opennms/netlify-cli:2.8.3-b1

  package-cloud-cli-executor:
    docker:
      - image: opennms/package-cloud-cli:0.3.05-b1

workflows:
  build-deploy:
    jobs:
      # Run build jobs for all branches and any tag
      - pre-build:
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - pre-build
          filters:
            tags:
              only: /.*/
      - build-docs:
          requires:
            - pre-build
          filters:
            tags:
              only: /.*/

      # Run deploy jobs just on version tags and master branch
      - deploy-maven:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master
      - deploy-packages:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master
      - deploy-docs:
          requires:
            - build-docs
          filters:
            tags:
              only: /^v.*/
            branches:
              only:
                - master

jobs:
  pre-build:
    executor: build-executor
    steps:
      - checkout

      - persist_to_workspace:
          root: ~/
          paths:
            - project

  build:
    executor: build-executor
    steps:
      - attach_workspace:
          at: ~/

      - run: |
          mvn -DskipTests clean install dependency:resolve-plugins dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v2-dependencies-{{ checksum "pom.xml" }}

      - run:
          name: Run the tests
          command: |
            mvn test integration-test

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/junit/ \;
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - run:
          name: Gather artifacts
          command: |
            mkdir -p ~/dist/
            cp assembly/opennms-rpm/target/rpm/opennms-oce-plugin/RPMS/noarch/* ~/dist/
            cp assembly/sentinel-rpm/target/rpm/sentinel-oce-plugin/RPMS/noarch/* ~/dist/
            cp assembly/kar/target/opennms-oce-plugin.kar ~/dist/
          when: always

      - store_artifacts:
          path: ~/dist
          destination: dist

      - persist_to_workspace:
          root: ~/
          paths:
            - project
  
  build-docs:
    executor: docs-executor
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Generate HTML output for documentation
          command: |
            antora generate site.yml

      - store_artifacts:
          path: build/site.zip
          destination: site.zip

      - persist_to_workspace:
          root: ~/
          paths:
            - project

  deploy-maven:
    executor: build-executor
    steps:
      - attach_workspace:
          at: ~/
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-
      - run:
          name: Deploy the artifacts
          command: |
            mvn -s .circleci.settings.xml -DskipTests deploy

  deploy-packages:
      executor: package-cloud-cli-executor
      steps:
        - attach_workspace:
            at: ~/
        - run:
            name: Push RPM packages
            command: |
              package_cloud push opennms/plugin-snapshot/el/7 assembly/opennms-rpm/target/rpm/opennms-oce-plugin/RPMS/noarch/*
              package_cloud push opennms/plugin-snapshot/el/7 assembly/sentinel-rpm/target/rpm/sentinel-oce-plugin/RPMS/noarch/*
  
  deploy-docs:
    executor: netlify-cli-executor
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Deploy docs to Netlify
          command: |
            netlify deploy --prod -d public -s ${NETLIFY_SITE_ID}
