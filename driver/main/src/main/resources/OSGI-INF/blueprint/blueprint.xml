<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0">

    <!-- Datasource -->
    <reference id="alarmDatasource" interface="org.opennms.alec.datasource.api.AlarmDatasource" />
    <reference id="alarmFeedbackDatasource" interface="org.opennms.alec.datasource.api.AlarmFeedbackDatasource" />
    <reference id="inventoryDatasource" interface="org.opennms.alec.datasource.api.InventoryDatasource" />
    <reference id="situationDatasource" interface="org.opennms.alec.datasource.api.SituationDatasource" />

    <!-- Engine -->
    <reference id="engineFactory" interface="org.opennms.alec.engine.api.EngineFactory" />

    <!-- Situation Processor -->
    <reference id="situationProcessorFactory" interface="org.opennms.alec.processor.api.SituationProcessorFactory"/>

    <!-- Metrics -->
    <bean id="metricRegistry" class="com.codahale.metrics.MetricRegistry"/>
    <bean id="metricRegistryJmxReporterBuilder" class="com.codahale.metrics.jmx.JmxReporter" factory-method="forRegistry">
        <argument ref="metricRegistry"/>
    </bean>
    <bean id="metricRegistryDomainedJmxReporterBuilder" factory-ref="metricRegistryJmxReporterBuilder" factory-method="inDomain">
        <argument value="org.opennms.alec.driver.main"/>
    </bean>
    <bean id="metricRegistryJmxReporter"
          factory-ref="metricRegistryDomainedJmxReporterBuilder"
          factory-method="build"
          init-method="start"
          destroy-method="stop" />

    <bean id="driver" class="org.opennms.alec.driver.main.Driver" init-method="init" destroy-method="destroy">
        <argument ref="blueprintBundleContext"/>
        <argument ref="alarmDatasource"/>
        <argument ref="alarmFeedbackDatasource"/>
        <argument ref="inventoryDatasource"/>
        <argument ref="situationDatasource"/>
        <argument ref="engineFactory"/>
        <argument ref="situationProcessorFactory"/>
        <argument ref="metricRegistry"/>
    </bean>
    <service ref="driver" interface="org.opennms.alec.engine.api.EngineRegistry"/>

    <!-- Expose a health check that can be used when we're running in an OpenNMS container -->
    <bean id="healthCheck" class="org.opennms.alec.driver.main.DriverHealthCheck">
        <argument ref="driver"/>
    </bean>
    <service ref="healthCheck" interface="org.opennms.integration.api.v1.health.HealthCheck"/>

</blueprint>
